{
  "name": "createyourideas",
  "version": "0.0.1-SNAPSHOT",
  "private": true,
  "description": "Description for createyourideas",
  "license": "UNLICENSED",
  "scripts": {
    "app:start": "./mvnw",
    "backend:build-cache": "./mvnw dependency:go-offline",
    "backend:debug": "./mvnw -Dspring-boot.run.jvmArguments=\"-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:8000\"",
    "backend:doc:test": "./mvnw -ntp javadoc:javadoc --batch-mode",
    "backend:info": "./mvnw -ntp enforcer:display-info --batch-mode",
    "backend:nohttp:test": "./mvnw -ntp checkstyle:check --batch-mode",
    "backend:start": "./mvnw -P-webapp",
    "backend:unit:test": "./mvnw -ntp -P-webapp verify --batch-mode -Dlogging.level.ROOT=OFF -Dlogging.level.org.zalando=OFF -Dlogging.level.tech.jhipster=OFF -Dlogging.level.net.createyourideas.app=OFF -Dlogging.level.org.springframework=OFF -Dlogging.level.org.springframework.web=OFF -Dlogging.level.org.springframework.security=OFF",
    "build": "npm run webapp:prod --",
    "build-watch": "concurrently 'npm run webapp:build:dev -- --watch' npm:backend:start",
    "ci:backend:test": "npm run backend:info && npm run backend:doc:test && npm run backend:nohttp:test && npm run backend:unit:test",
    "ci:e2e:package": "npm run java:$npm_package_config_packaging:$npm_package_config_default_environment -- -Pe2e -Denforcer.skip=true",
    "ci:e2e:prepare": "npm run ci:e2e:prepare:docker",
    "ci:e2e:prepare:docker": "npm run docker:db:up && npm run docker:others:up && docker ps -a",
    "preci:e2e:server:start": "npm run docker:db:await --if-present && npm run docker:others:await --if-present",
    "ci:e2e:server:start": "java -jar target/e2e.$npm_package_config_packaging --spring.profiles.active=$npm_package_config_default_environment -Dlogging.level.ROOT=OFF -Dlogging.level.org.zalando=OFF -Dlogging.level.tech.jhipster=OFF -Dlogging.level.net.createyourideas.app=OFF -Dlogging.level.org.springframework=OFF -Dlogging.level.org.springframework.web=OFF -Dlogging.level.org.springframework.security=OFF --logging.level.org.springframework.web=ERROR",
    "ci:e2e:teardown": "npm run ci:e2e:teardown:docker",
    "ci:e2e:teardown:docker": "npm run docker:db:down --if-present && npm run docker:others:down && docker ps -a",
    "ci:frontend:build": "npm run webapp:build:$npm_package_config_default_environment",
    "ci:frontend:test": "npm run ci:frontend:build && npm test",
    "ci:server:package": "npm run java:$npm_package_config_packaging:$npm_package_config_default_environment",
    "clean-www": "rimraf target/classes/static/app/{src,target/}",
    "cleanup": "rimraf target/classes/static/",
    "docker:app:up": "docker-compose -f src/main/docker/app.yml up -d",
    "docker:db:down": "docker-compose -f src/main/docker/mysql.yml down -v --remove-orphans",
    "docker:db:up": "docker-compose -f src/main/docker/mysql.yml up -d",
    "docker:jhipster-registry:down": "docker-compose -f src/main/docker/jhipster-registry.yml down -v --remove-orphans",
    "docker:jhipster-registry:up": "docker-compose -f src/main/docker/jhipster-registry.yml up -d",
    "docker:keycloak:down": "docker-compose -f src/main/docker/keycloak.yml down -v --remove-orphans",
    "docker:keycloak:up": "docker-compose -f src/main/docker/keycloak.yml up -d",
    "docker:others:await": "echo \"Waiting for keycloak to start\" && wait-on http-get://localhost:9080/auth/realms/jhipster -t 30000 && echo \"keycloak started\" || echo \"keycloak not running, make sure oauth2 server is running\" && echo \"Waiting for jhipster-registry to start\" && wait-on http-get://localhost:8761/management/health && echo \"jhipster-registry started\"",
    "docker:others:down": "npm run docker:keycloak:down && npm run docker:jhipster-registry:down",
    "predocker:others:up": "",
    "docker:others:up": "npm run docker:keycloak:up && npm run docker:jhipster-registry:up",
    "java:docker": "./mvnw -ntp verify -DskipTests jib:dockerBuild",
    "java:docker:arm64": "npm run java:docker -- -Djib-maven-plugin.architecture=arm64",
    "java:docker:dev": "npm run java:docker -- -Pdev,webapp",
    "java:docker:prod": "npm run java:docker -- -Pprod",
    "java:jar": "./mvnw -ntp verify -DskipTests --batch-mode",
    "java:jar:dev": "npm run java:jar -- -Pdev,webapp",
    "java:jar:prod": "npm run java:jar -- -Pprod",
    "java:war": "./mvnw -ntp verify -DskipTests --batch-mode -Pwar",
    "java:war:dev": "npm run java:war -- -Pdev,webapp",
    "java:war:prod": "npm run java:war -- -Pprod",
    "jest": "jest --coverage --logHeapUsage --maxWorkers=2 --config jest.conf.js",
    "lint": "eslint . --ext .js,.ts",
    "lint:fix": "npm run lint -- --fix",
    "prepare": "husky install",
    "prettier:check": "prettier --check \"{,src/**/,webpack/}*.{md,json,yml,html,cjs,mjs,js,ts,tsx,css,scss,java}\"",
    "prettier:format": "prettier --write \"{,src/**/,webpack/}*.{md,json,yml,html,cjs,mjs,js,ts,tsx,css,scss,java}\"",
    "serve": "npm run start --",
    "start": "ng serve --hmr --proxy-config webpack/proxy.conf.js",
    "start-tls": "npm run webapp:dev-ssl",
    "pretest": "npm run lint",
    "test": "ng test --coverage --log-heap-usage -w=2",
    "test:watch": "npm run test -- --watch",
    "watch": "concurrently npm:start npm:backend:start",
    "webapp:build": "npm run clean-www && npm run webapp:build:dev",
    "webapp:build:dev": "ng build --configuration development",
    "webapp:build:prod": "ng build --configuration production",
    "webapp:dev": "ng serve",
    "webapp:dev-ssl": "ng serve --ssl",
    "webapp:dev-verbose": "ng serve --verbose",
    "webapp:prod": "npm run clean-www && npm run webapp:build:prod",
    "webapp:test": "npm run test --"
  },
  "config": {
    "backend_port": "8080",
    "default_environment": "prod",
    "packaging": "jar"
  },
  "dependencies": {
    "@angular/animations": "^12.0.0",
    "@angular/cdk": "^12.2.13",
    "@angular/common": "^12.0.0",
    "@angular/compiler": "^12.0.0",
    "@angular/core": "^12.0.0",
    "@angular/forms": "^12.0.0",
    "@angular/http": "^7.2.16",
    "@angular/localize": "^12.0.0",
    "@angular/material": "^12.0.0",
    "@angular/platform-browser": "^12.0.0",
    "@angular/platform-browser-dynamic": "^12.0.0",
    "@angular/router": "^12.0.0",
    "@fortawesome/angular-fontawesome": "^0.9.0",
    "@fortawesome/fontawesome-svg-core": "^1.2.36",
    "@fortawesome/free-brands-svg-icons": "^5.15.4",
    "@fortawesome/free-solid-svg-icons": "^5.15.4",
    "@ng-bootstrap/ng-bootstrap": "10.0.0",
    "@ng-select/ng-select": "^7.3.0",
    "@ngx-formly/bootstrap": "^5.10.23",
    "@ngx-formly/core": "^5.0.0",
    "@ngx-formly/material": "^5.10.23",
    "@ngx-formly/primeng": "^5.0.0",
    "@ngx-translate/core": "13.0.0",
    "@ngx-translate/http-loader": "6.0.0",
    "@types/jquery.contextmenu": "^1.7.35",
    "@types/quill": "^1.3.10",
    "angular-datatables": "^13.0.0",
    "bootstrap": "^4.6.0",
    "bootswatch": "^5.1.3",
    "cd": "^0.3.3",
    "chart.js": "^3.6.0",
    "datatables.net": "^1.11.3",
    "datatables.net-dt": "^1.11.3",
    "dayjs": "1.10.7",
    "hammerjs": "^2.0.8",
    "jquery": "^3.6.0",
    "jquery-contextmenu": "^2.9.2",
    "jquery-ui-dist": "^1.12.1",
    "lodash": "^4.17.21",
    "ng-chat": "^3.1.0",
    "ng-jhipster": "^0.16.0",
    "ng2-sticky-nav": "^10.0.0",
    "ngx-bootstrap": "^7.1.0",
    "ngx-google-places-autocomplete": "^2.0.5",
    "ngx-iban": "^12.0.0",
    "ngx-infinite-scroll": "10.0.1",
    "ngx-quill": "^14.3.0",
    "ngx-select-dropdown": "^2.1.0",
    "ngx-sharebuttons": "^9.0.0",
    "ngx-socket-io": "^4.1.0",
    "ngx-webstorage": "8.0.0",
    "primeicons": "^4.1.0",
    "primeng": "^12.2.1",
    "prop-types": "^15.7.2",
    "quill": "^1.3.7",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "rxjs": "^6.6.7",
    "swagger-ui-dist": "3.52.5",
    "tslib": "^2.3.1",
    "zone.js": "0.11.4"
  },
  "devDependencies": {
    "@angular-builders/custom-webpack": "12.1.3",
    "@angular-builders/jest": "12.1.2",
    "@angular-devkit/build-angular": "^12.0.0",
    "@angular-eslint/eslint-plugin": "12.5.0",
    "@angular/cli": "^12.0.0",
    "@angular/compiler-cli": "^12.0.0",
    "@angular/service-worker": "^12.0.0",
    "@ngx-formly/schematics": "^5.10.23",
    "@types/datatables.net": "^1.10.21",
    "@types/jest": "27.0.2",
    "@types/jquery": "^3.5.8",
    "@types/node": "^16.11.1",
    "@typescript-eslint/eslint-plugin": "4.33.0",
    "@typescript-eslint/parser": "4.33.0",
    "browser-sync": "2.27.5",
    "browser-sync-webpack-plugin": "2.3.0",
    "concurrently": "6.3.0",
    "copy-webpack-plugin": "9.0.1",
    "eslint": "7.32.0",
    "eslint-config-prettier": "8.3.0",
    "eslint-webpack-plugin": "3.0.1",
    "folder-hash": "4.0.1",
    "generator-jhipster": "7.3.1",
    "husky": "7.0.2",
    "jest": "27.3.0",
    "jest-date-mock": "1.0.8",
    "jest-junit": "13.0.0",
    "jest-preset-angular": "10.0.1",
    "jest-sonar-reporter": "2.0.0",
    "lint-staged": "11.2.3",
    "merge-jsons-webpack-plugin": "1.0.21",
    "prettier": "2.4.1",
    "prettier-plugin-java": "1.5.0",
    "prettier-plugin-packagejson": "2.2.13",
    "rimraf": "3.0.2",
    "ts-jest": "27.0.7",
    "typescript": "4.3.5",
    "wait-on": "6.0.0",
    "webpack": "5.50.0",
    "webpack-bundle-analyzer": "4.5.0",
    "webpack-merge": "5.8.0",
    "webpack-notifier": "1.14.1"
  },
  "engines": {
    "node": ">=14.17.6"
  },
  "cacheDirectories": [
    "node_modules"
  ],
  "jestSonar": {
    "reportPath": "target/test-results/jest",
    "reportFile": "TESTS-results-sonar.xml"
  }
}
